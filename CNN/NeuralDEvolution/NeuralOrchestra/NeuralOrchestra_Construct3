export { NeuralOrchestra_Construct3 as Construct3 };

// import * as Pool from "../../util/Pool.js";
// import * as Recyclable from "../../util/Recyclable.js";
// import * as ValueDesc from "../../Unpacker/ValueDesc.js";
// import * as NeuralNet from "../../Conv/NeuralNet.js";
//import * as DEvolution from "../DEvolution.js";
import { Base } from "./NeuralOrchestra_Base.js";

/**
 * Orchestrate neural networks with differential evolution, and inter-operate with
 * Construct3 Game Engine.
 *
 *
 */
class NeuralOrchestra_Construct3 extends Base {

  /**
   * Used as default NeuralOrchestra.Construct3 provider for conforming to Recyclable interface.
   */
  static Pool = new Pool.Root( "NeuralOrchestra.Construct3.Pool",
    NeuralOrchestra_Construct3, NeuralOrchestra_Construct3.setAsConstructor );

  /** */
  constructor() {
    super();
    NeuralOrchestra_Construct3.setAsConstructor_self.call( this );
  }

  /** @override */
  static setAsConstructor() {
    super.setAsConstructor();
    NeuralOrchestra_Construct3.setAsConstructor_self.call( this );
    return this;
  }

  /** @override */
  static setAsConstructor_self() {

//!!! ...unfinished... (2022/10/20)

  }

  /** @override */
  disposeResources() {

//!!! ...unfinished... (2022/10/20)

    super.disposeResources();
  }

}
